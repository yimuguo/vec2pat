import tset bstar, bstop, mack, nack, noop, readt, sack, wridt; 
                                                                
vector       ( $tset, SCLsel0, SDAsel1 )            
{                                                               
start_label Read_B1_B11_1:                         
                 > noop   1    1;                   
repeat 10        > -      1    1;                   
                 > bstar  1    1;                   
Slave_address_W:                                    
                 > wridt  1    1;//D4h              
                 > -      1    1;                   
                 > -      1    0;                   
                 > -      1    1;                   
                 > -      1    0;                   
                 > -      1    1;                   
                 > -      1    0;                   
                 > -      1    0;                   
                 > sack   1    L;                   
Start_Address_Read:                                 
                 > wridt  1    0;//start at Byte0   
                 > -      1    0;                   
                 > -      1    0;                   
                 > -      1    0;                   
                 > -      1    0;                   
                 > -      1    0;                   
                 > -      1    0;                   
                 > -      1    0;                   
                 > sack   1    L;                   
                 > noop   1    1;                   
                 > bstar  1    1;                   
Slave_address_R:                                    
                 > wridt  1    1;//D5h              
                 > -      1    1;                   
                 > -      1    0;                   
                 > -      1    1;                   
                 > -      1    0;                   
                 > -      1    1;                   
                 > -      1    0;                   
                 > -      1    1;                   
//clr_flag (fail), ign, clr_fail > readt   1  X;      
                 > sack   1    L;                            
rbyte_B0:                                           
repeat 8,ign,stv > readt  1    L;//24              
                 > mack   1    0;                   
rbyte_B1:                                           
repeat 8,ign,stv > readt  1    L;//24              
                 > mack   1    0;                   
rbyte_B2:                                           
repeat 8,ign,stv > readt  1    L;//25              
                 > mack   1    0;                   
rbyte_B3:                                           
repeat 8,ign,stv > readt  1    L;//26              
                 > mack   1    0;                   
rbyte_B4:                                           
repeat 8,ign,stv > readt  1    L;//27              
                 > mack   1    0;                   
rbyte_B5:                                           
repeat 8,ign,stv > readt  1    L;//28              
                 > mack   1    0;                   
rbyte_B6:                                           
repeat 8,ign,stv > readt  1    L;//29              
                 > mack   1    0;                   
rbyte_B7:                                           
repeat 8,ign,stv > readt  1    L;//30              
                 > mack   1    0;                   
rbyte_B8:                                           
repeat 8,ign,stv > readt  1    L;//31              
                 > mack   1    0;                   
rbyte_B9:                                           
repeat 8,ign,stv > readt  1    L;//32              
//                 > mack   1    0;                   
//rbyte_B10:                                           
//repeat 8,ign,stv > readt  1    L;//33              
      
                 > nack   1    1;                   
                 > bstop  1    0;                   
repeat 5         > noop   1    1;                   
halt             > -      -    -;                   
                 > -      -    -;                   
}                                                               
